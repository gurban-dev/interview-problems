Big-O notation
Time complexity analysis

Data structures and the impact of creating, deleting, inserting,
and locating operations on them:
Array
Singly linked list
Doubly linked list
Stack
Queue

Traversal, creating the tree, insertion, removal, locate:
Binary tree

Traversals:
Post order
Preorder
Inorder

Height of a tree, depth of a node within a tree, complete binary
tree, full binary tree, and a perfect binary tree.

Binary search tree

Min heap
Max heap

Priority queue

Graphs
What is a graph?
How do you represent it?
What are the different types of representations and which are
advantagenous in which scenarios?

Hash

Know which data structures are best for each of the operations.

Skip unless aiming for senior-level openings:
B trees
Red black trees
AVL trees
Tries

Have a basic theory understanding of the following algorithms,
rather than memorising them:
Recursion

Searching algorithms
Linear search
Binary search

Sorting algorithms
Insertion sort
Selection sort
Bubble sort
Merge sort
Heap sort
Quick sort

Graph algorithms
Depth-first search (Stack)
Breadth-first search (Queue)

Path-finding algorithms:
A* path finding algorithm
Dijstra algorithm

Dynamic programming
Greedy algorithms

Divide and conquer algorithms

Backtracking algorithms

Two pointer approach
Sliding window

Tim completed what ensues:
60 leetcode questions
50 algoexpert questions

Comprehend the solution to each question.
Repeat the solution until you understand it.