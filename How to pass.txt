1. Break down what you were asked.

   Ask follow-up clarifying questions about
   the input and the expected output.

   E.g.
   Input: Array

   Could the array be empty?

   Does it store duplicate values?

   Does it exclusively store data of one type?

   Will there always be a solution or does it depend
   on the input?

2. Visualise the problem by drawing it out.

3. Ask for test cases if you are not given any.

   Verbally walk through why you understand the output
   for the test case.

4. Before coding, write an algorithm in a fashion that
   makes it appear that you don't know the answer up front.

   Begin with a naive approach like a brute force algorithm,
   and explain to the interviewer why the approach isn't
   optimal.

5. Avoid long periods of silence while coding.

6. Explain why you went with your approach.

   Talk about the time and space complexity.

   If it's not the most optimal solution, explain
   why you think it's not.